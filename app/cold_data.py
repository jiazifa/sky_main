
from typing import List
from flask import Flask
from app.model import db, RssModel
from app.utils import NoResultFound, MultipleResultsFound

RSS_SOURCES: List[str] = [
    "https://rsshub.app/dgtle/whale/category/0",
    "https://www.zhihu.com/rss",
    "https://36kr.com/feed",
    "https://www.freebuf.com/feed",
    "https://talk.swift.gg/static/rss.xml",
    "https://sspai.com/feed",
    "https://www.huxiu.com/rss/0.xml",
    "https://www.pingwest.com/feed/all",
    "https://www.pingwest.com/feed/",
    "https://rsshub.app/rsshub/rss",
    "http://www.dgtle.com/rss/dgtle.xml",
    "https://www.oschina.net/blog/rss",
    "https://dq.yam.com/rss.php",
    "https://feed.iplaysoft.com/",
    "http://jandan.net/feed",
    "https://news.un.org/feed/subscribe/zh/news/all/rss",
    "http://www.ftchinese.com/rss/news",
    "https://rss.cnbeta.com/",
    "http://www.rologo.com/feed",
    "https://www.qiushibaike.com/hot/rss",
    "https://www.yymiao.cn/feed",
    "https://www.photoworld.com.cn/feed",
    "http://www.alibuybuy.com/feed",
    "https://www.lieyunwang.com/newrss/feed.xml",
    "http://app.iheima.com/?app=rss",
    "https://juejin.im/rss",
    "https://xueqiu.com/hots/topic/rss",
    "http://www.chanpin100.com/feed",
    "https://buzzorange.com/feed/",
    "http://www.woshipm.com/feed",
    "https://www.meihua.info/feed",
    "https://www.tmtpost.com/rss",
    "https://www.aqniu.com/feed",
    "https://www.yunyingpai.com/feed",
    "https://www.shuge.org/feed",
    "http://zhainanba.net/feed",
    "http://www.qdaily.com/feed.xml",
    "https://songshuhui.net/feed",
    "http://research.sinica.edu.tw/feed/",
    "https://rsshub.app/people/opinion/223228",
    "https://rsshub.app/pixiv/ranking/day_female",
    "https://rsshub.app/readhub/category/daily",
    "https://rsshub.app/pixiv/ranking/day",
    "https://rsshub.app/houxu/lives/new",
    "https://rsshub.app/laosiji/feed",
    "https://rsshub.app/cnbeta",
    "https://rsshub.app/bjp/apod",
    "https://rsshub.app/dajia",
    "https://rsshub.app/engadget-cn",
    "https://rsshub.app/bing",
    "https://rsshub.app/readhub/category/topic",
    "https://rsshub.app/bbc/chinese",
    "https://rsshub.app/dockone/weekly",
    "http://www.economist.com/the-world-this-week/rss",
    "https://rsshub.app/yidoutang/index",
    "https://www.yystv.cn/rss/feed",
    "https://rsshub.app/weseepro/newest-direct",
    "https://rsshub.app/dapenti/tugua",
    "https://rsshub.app/chouti/hot",
    "https://rsshub.app/qdaily/notch/posts",
    "https://www.zhangzishi.cc/feed",
    "https://rsshub.app/tanwu/products",
    "https://rsshub.app/jianshu/home",
    "https://rsshub.app/the-economist/latest",
    "https://rsshub.app/cfan/news",
    "https://rsshub.app/nytimes/dual",
    "https://rsshub.app/readhub/category/technews",
    "https://rsshub.app/pixiv/ranking/day_male",
    "https://rsshub.app/natgeo/dailyphoto",
    "https://rsshub.app/juejin/category/article",
    "https://rsshub.app/ltaaa",
    "https://rsshub.app/pixiv/ranking/week",
    "https://rsshub.app/zhihu/hotlist",
    "https://rsshub.app/matters/hot",
    "https://rsshub.app/baidu/topwords/1",
    "https://rsshub.app/gov/zhengce/zuixin",
    "https://rsshub.app/readhub/category/blockchain",
    "https://rsshub.app/pigtails",
    "https://rsshub.app/zhihu/pin/daily",
    "https://rsshub.app/zaobao/realtime/china",
    "https://rsshub.app/dongqiudi/top_news",
    "https://www.ifanr.com/tags/rss-??",
    "https://rsshub.app/ft/chinese/hotstoryby7day",
    "http://rss.rrys.tv/rss/feed",
    "https://rsshub.app/jianshu/collection/xYuZYD",
    "https://rsshub.app/douban/movie/playing",
    "https://rsshub.app/oilprice/shanghai",
    "https://rsshub.app/itjuzi/merge",
    "https://rsshub.app/xiachufang/popular/hot",
    "https://rsshub.app/pixiv/user/bookmarks/15288095",
    "https://rsshub.app/kkj/news",
    "https://rsshub.app/weseepro/newest",
    "https://rsshub.app/infoq/recommend",
    "https://rsshub.app/readhub/category/news",
    "https://rsshub.app/sina/discovery/zx",
    "https://rsshub.app/aiyanxishe/109/hot",
    "https://rsshub.app/toutiao/today",
    "https://rsshub.app/vocus/publication/bass",
    "https://rsshub.app/wechat/csm/huxiu_com",
    "https://rsshub.app/gov/zhengce/wenjian",
    "https://rsshub.app/asahichinese-j/society",
    "https://rsshub.app/itjuzi/invest",
    "https://rsshub.app/36kr/newsflashes",
]


def prepare(app: Flask):
    @app.before_first_request
    def prepare_cold_data():
        for rss in RSS_SOURCES:
            try:
                RssModel.query.filter(RssModel.rss_link == rss).one()
            except NoResultFound:
                model = RssModel(rss)
                db.session.add(model)
        db.session.commit()